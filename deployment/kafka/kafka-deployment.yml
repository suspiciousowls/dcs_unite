apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 29092
            - containerPort: 9092
          env:
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "0@localhost:9093"
            - name: KAFKA_NODE_ID
              value: "0"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kraft-combined-logs"
#            - name: KAFKA_ADVERTISED_LISTENERS
#              value: "PLAINTEXT://kafka-service:9092,PLAINTEXT_HOST://kafka-service:29092"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
#            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
#              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: CLUSTER_ID
              value: "f26d9c8b-7e5b-4eb6-9c7b-861a429725ae"
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka-data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc